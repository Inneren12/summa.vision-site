"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[715],{4715:function(e,t,n){n.r(t),n.d(t,{default:function(){return r}}),n(8571);var r=function(e){let t=()=>({hashMode:!1,trackLocalhost:!1,url:location.href,domain:location.hostname,referrer:document.referrer||null,deviceWidth:window.innerWidth,apiHost:"https://plausible.io",...e}),n=(e,n,r)=>{!function(e,t,n){let r=/^localhost$|^127(?:\.[0-9]+){0,2}\.[0-9]+$|^(?:0*:)*?:?0*1$/.test(location.hostname)||"file:"===location.protocol;if(!t.trackLocalhost&&r)return console.warn("[Plausible] Ignoring event because website is running locally");try{if("true"===window.localStorage.plausible_ignore)return console.warn('[Plausible] Ignoring event because "plausible_ignore" is set to "true" in localStorage')}catch(e){}let o={n:e,u:t.url,d:t.domain,r:t.referrer,w:t.deviceWidth,h:t.hashMode?1:0,p:n&&n.props?JSON.stringify(n.props):void 0},a=new XMLHttpRequest;a.open("POST",`${t.apiHost}/api/event`,!0),a.setRequestHeader("Content-Type","text/plain"),a.send(JSON.stringify(o)),a.onreadystatechange=()=>{4===a.readyState&&n&&n.callback&&n.callback()}}(e,{...t(),...r},n)},r=(e,t)=>{n("pageview",t,e)};return{trackEvent:n,trackPageview:r,enableAutoPageviews:()=>{let t=()=>r(),n=history.pushState;return n&&(history.pushState=function(e,r,o){n.apply(this,[e,r,o]),t()},addEventListener("popstate",t)),e&&e.hashMode&&addEventListener("hashchange",t),r(),function(){n&&(history.pushState=n,removeEventListener("popstate",t)),e&&e.hashMode&&removeEventListener("hashchange",t)}},enableAutoOutboundTracking:(e=document,t={subtree:!0,childList:!0,attributes:!0,attributeFilter:["href"]})=>{function r(e){n("Outbound Link: Click",{props:{url:this.href}}),setTimeout(()=>{location.href=this.href},150),e.preventDefault()}let o=new Set;function a(e){e instanceof HTMLAnchorElement?e.host!==location.host&&(e.addEventListener("click",r),o.add(e)):"querySelectorAll"in e&&e.querySelectorAll("a").forEach(a)}function i(e){e instanceof HTMLAnchorElement?(e.removeEventListener("click",r),o.delete(e)):"querySelectorAll"in e&&e.querySelectorAll("a").forEach(i)}let l=new MutationObserver(e=>{e.forEach(e=>{"attributes"===e.type?(i(e.target),a(e.target)):"childList"===e.type&&(e.addedNodes.forEach(a),e.removedNodes.forEach(i))})});return e.querySelectorAll("a").forEach(a),l.observe(e,t),function(){o.forEach(e=>{e.removeEventListener("click",r)}),o.clear(),l.disconnect()}}}}}}]);