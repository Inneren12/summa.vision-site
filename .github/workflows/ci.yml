name: CI
on:
  push: { branches: ["*"] }
  pull_request: { branches: ["*"] }
jobs:
  sentinel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Ensure no auto-install actions
        shell: bash
        run: |
          set -e
          if egrep -R -n '^[[:space:]]*uses:[[:space:]]*bahmutov/npm-install@' .github/workflows >/tmp/_forbidden.txt; then
            echo "::group::Forbidden auto-install usages"
            cat /tmp/_forbidden.txt
            echo "::endgroup::"
            echo "::error::Remove 'bahmutov/npm-install' actions â€” they force 'npm ci' before lock sync"
            exit 1
          fi

  build-test:
    runs-on: ubuntu-latest
    needs: [sentinel]
    env:
      HUSKY: "0"
      NEXT_PUBLIC_APP_NAME: "Summa Vision"
      NEXT_PUBLIC_API_BASE_URL: "https://example.invalid"
      NEXT_PUBLIC_SITE_URL: "http://localhost:3000"
      NODE_VERSION: "20.17.0"
      NODE_MAJOR: "20"
      PNPM_VERSION: "9.12.3"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Activate pnpm ${{ env.PNPM_VERSION }}
        run: |
          corepack enable
          corepack prepare pnpm@${PNPM_VERSION} --activate
          pnpm --version

      - name: Restore node_modules cache
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            apps/web/node_modules
          key: ${{ runner.os }}-node${{ env.NODE_MAJOR }}-pnpm-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_MAJOR }}-pnpm-modules-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Print CI environment fingerprint
        run: pnpm run ci:env

      - name: Postinstall (manual Next patch)
        run: |
          if [ -f scripts/patch-next.cjs ]; then node scripts/patch-next.cjs; fi

      - name: Prepare apps/web/.env.local
        run: |
          mkdir -p apps/web
          cat > apps/web/.env.local <<'EOENV'
          NEXT_PUBLIC_APP_NAME=Summa Vision
          NEXT_PUBLIC_API_BASE_URL=https://example.invalid
          NEXT_PUBLIC_SITE_URL=http://localhost:3000
          EOENV

      - name: Restore Next.js cache
        id: cache-next
        uses: actions/cache@v4
        with:
          path: apps/web/.next/cache
          key: ${{ runner.os }}-node${{ env.NODE_MAJOR }}-next-${{ hashFiles('pnpm-lock.yaml', 'apps/web/next.config.js') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_MAJOR }}-next-

      - name: Lint
        run: pnpm run lint || true

      - name: Typecheck
        run: pnpm run typecheck || true

      - name: Validate rollout policies
        run: pnpm run policy:validate

      - name: Unit / Coverage
        run: pnpm run test:ci || pnpm test

      - name: Static analysis (knip + madge)
        run: pnpm run quality:check || true

      - name: Build web
        run: pnpm run web:build
