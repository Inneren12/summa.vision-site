name: E2E
permissions:
  contents: write  # нужно, чтобы коммитнуть снапшоты в ветку PR
on:
  push:
    branches: ["*"]
    paths:
      - "apps/web/**"
      - "e2e/**"
  pull_request:
    branches: ["*"]
    paths:
      - "apps/web/**"
      - "e2e/**"
concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true
jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      HUSKY: "0"
      NEXT_PUBLIC_APP_NAME: "Summa Vision"
      NEXT_PUBLIC_API_BASE_URL: "https://example.invalid"
      NEXT_PUBLIC_SITE_URL: "http://localhost:3010"
      PW_SKIP_WEBSERVER: "0"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.sha || github.head_ref || github.ref_name }}
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Sync lockfile (no scripts)
        run: npm install --package-lock-only --no-audit --no-fund --ignore-scripts
      - name: Install deps (ignore scripts)
        run: npm ci --no-audit --no-fund --ignore-scripts || npm install --no-audit --no-fund --ignore-scripts
      - name: Postinstall (manual Next patch)
        run: |
          if [ -f scripts/patch-next.cjs ]; then node scripts/patch-next.cjs; fi
      - name: Prepare apps/web/.env.local
        run: |
          mkdir -p apps/web
          cat > apps/web/.env.local <<'EOENV'
          NEXT_PUBLIC_APP_NAME=Summa Vision
          NEXT_PUBLIC_API_BASE_URL=https://example.invalid
          NEXT_PUBLIC_SITE_URL=http://localhost:3010
          EOENV
      - name: Install Playwright browsers (1.48.0)
        run: npx -y playwright@1.48.0 install --with-deps chromium
      - name: Build web (standalone)
        run: npm run web:build
      # ОТЛАДКА: проверяем что создалось после сборки
      - name: Debug - Check build output
        run: |
          echo "=== Checking .next directory structure ==="
          ls -la apps/web/.next/ || echo "No .next directory"
          echo ""
          echo "=== Checking standalone directory ==="
          ls -la apps/web/.next/standalone/ || echo "No standalone directory"
          echo ""
          echo "=== Looking for server.js recursively ==="
          find apps/web/.next -name "server.js" -type f || echo "No server.js found"
          echo ""
          echo "=== Full .next/standalone tree ==="
          tree -L 3 apps/web/.next/standalone/ || ls -R apps/web/.next/standalone/
      
      - name: Copy Next.js artifacts (standalone/serverless/static)
        env:
          REQUIRE_SERVER: "0"
          STANDALONE_OUT_DIR: "./dist/app"
        run: node ./scripts/copy-standalone-assets.cjs

      - name: Start Next server (failsafe)
        if: env.PW_SKIP_WEBSERVER == '1'
        env:
          PORT: "3000"
          HOST: "127.0.0.1"
        run: |
          nohup npx --yes --prefix apps/web next@14.2.8 start -p "$PORT" --hostname "$HOST" \
            > next-server.log 2>&1 &
          echo $! > next-server.pid
          sleep 5

      - name: Run E2E smoke
        env:
          E2E_PORT: "3000"
          E2E_HOST: "127.0.0.1"
          PW_SKIP_WEBSERVER: ${{ env.PW_SKIP_WEBSERVER }}
        run: npx -y @playwright/test@1.48.0 test -c ./playwright.config.ts

      - name: Stop Next server (failsafe)
        if: env.PW_SKIP_WEBSERVER == '1'
        run: |
          if [ -f next-server.pid ]; then
            kill "$(cat next-server.pid)" || true
            rm -f next-server.pid
          fi
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
