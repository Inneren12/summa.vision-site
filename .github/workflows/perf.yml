name: Performance Budgets
on:
  pull_request:
  workflow_dispatch:
jobs:
  perf:
    runs-on: ubuntu-latest
    env:
      HUSKY: "0"
      NEXT_PUBLIC_APP_NAME: "Summa Vision"
      NEXT_PUBLIC_API_BASE_URL: "https://example.invalid"
      NEXT_PUBLIC_SITE_URL: "http://localhost:3000"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Sync lockfile (no scripts)
        run: npm install --package-lock-only --no-audit --no-fund --ignore-scripts

      - name: Install (ignore scripts)
        run: npm ci --no-audit --no-fund --ignore-scripts || npm install --no-audit --no-fund --ignore-scripts

      - name: Postinstall (manual Next patch)
        run: |
          if [ -f scripts/patch-next.cjs ]; then node scripts/patch-next.cjs; fi

      - name: Prepare .env.local for build
        run: |
          cat > .env.local <<'EOF'
          NEXT_PUBLIC_APP_NAME=Summa Vision
          NEXT_PUBLIC_API_BASE_URL=https://example.invalid
          NEXT_PUBLIC_SITE_URL=http://localhost:3000
          EOF

      - name: Ephemeral install (tanstack + viz libs) â€” no save/no lock
        run: |
          npm i -D -w apps/web @tanstack/react-table echarts vega vega-lite vega-embed --no-save --no-package-lock
      - name: Build web
        run: npm run web:build

      - name: Locate system Chrome
        id: chrome
        shell: bash
        run: |
          set -euo pipefail
          P="$(command -v google-chrome || command -v google-chrome-stable || command -v chromium || command -v chromium-browser || true)"
          if [ -n "$P" ]; then
            echo "Found Chrome at: $P"
            echo "path=$P" >> "$GITHUB_OUTPUT"
          else
            echo "No system Chrome found; LHCI will auto-detect."
          fi

      - name: Start & LHCI (warn)
        continue-on-error: true
        shell: bash
        run: |
          npm run web:start:ci & sleep 6
          if [ -n "${{ steps.chrome.outputs.path }}" ]; then
            echo "Using chrome at: ${{ steps.chrome.outputs.path }}"
            npx -y @lhci/cli@0.12.0 autorun --config=.lighthouserc.cjs -- --collect.chromePath="${{ steps.chrome.outputs.path }}"
          else
            echo "No explicit chrome path; letting LHCI auto-detect."
            npx -y @lhci/cli@0.12.0 autorun --config=.lighthouserc.cjs
          fi
