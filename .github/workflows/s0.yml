name: S0 Code-only Quality Checks
on:
  push: { branches: ["*"] }
  pull_request: { branches: ["*"] }
concurrency:
  group: s0-${{ github.ref }}
  cancel-in-progress: true

jobs:
  s0:
    runs-on: ubuntu-latest
    env:
      HUSKY: "0"
      NEXT_PUBLIC_APP_NAME: "Summa Vision"
      NEXT_PUBLIC_API_BASE_URL: "https://example.invalid"
      NEXT_PUBLIC_SITE_URL: "http://localhost:3010"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.sha || github.head_ref || github.ref_name }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Sync lockfile (no scripts)
        run: npm install --package-lock-only --no-audit --no-fund --ignore-scripts

      - name: Install deps (ignore scripts)
        run: npm ci --no-audit --no-fund --ignore-scripts || npm install --no-audit --no-fund --ignore-scripts

      - name: Postinstall (manual Next patch)
        run: |
          if [ -f scripts/patch-next.cjs ]; then node scripts/patch-next.cjs; fi

      - name: Prepare apps/web/.env.local
        run: |
          mkdir -p apps/web
          cat > apps/web/.env.local <<'EOENV'
          NEXT_PUBLIC_APP_NAME=Summa Vision
          NEXT_PUBLIC_API_BASE_URL=https://example.invalid
          NEXT_PUBLIC_SITE_URL=http://localhost:3010
          EOENV

      - name: Lint
        run: npm run lint || true

      - name: Typecheck
        run: npm run typecheck || true

      - name: Unit / Coverage
        run: npm run test:ci || npm test
