name: Visual Snapshots
on:
  pull_request:
  workflow_dispatch:

jobs:
  visual:
    runs-on: ubuntu-latest
    env:
      HUSKY: "0"
      NEXT_PUBLIC_APP_NAME: "Summa Vision"
      NEXT_PUBLIC_API_BASE_URL: "https://example.invalid"
      NEXT_PUBLIC_SITE_URL: "http://localhost:3000"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Sync lockfile (no scripts)
        run: npm install --package-lock-only --no-audit --no-fund --ignore-scripts
      - name: Install deps (ignore scripts)
        run: npm ci --no-audit --no-fund --ignore-scripts || npm install --no-audit --no-fund --ignore-scripts
      - name: Postinstall (manual Next patch)
        run: |
          if [ -f scripts/patch-next.cjs ]; then node scripts/patch-next.cjs; fi
      - name: Prepare env for apps/web
        run: |
          mkdir -p apps/web
          cat > apps/web/.env.local <<'EOF'
          NEXT_PUBLIC_APP_NAME=Summa Vision
          NEXT_PUBLIC_API_BASE_URL=https://example.invalid
          NEXT_PUBLIC_SITE_URL=http://localhost:3000
          EOF
      - name: Check for existing baselines
        id: baseline
        shell: bash
        run: |
          set -e
          COUNT=$(git ls-files "e2e/visual/**-snapshots/*.png" | wc -l || true)
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
          if [ "$COUNT" -eq 0 ]; then
            echo "No baseline PNGs found. Skipping visual tests."
          fi
      - name: Install Playwright browsers
        if: ${{ steps.baseline.outputs.count != '0' }}
        run: npx -y playwright@1.48.0 install --with-deps chromium
      - name: Build site
        if: ${{ steps.baseline.outputs.count != '0' }}
        run: npm run web:build
      - name: Start & run visual tests
        if: ${{ steps.baseline.outputs.count != '0' }}
        run: |
          npm run web:start:ci & sleep 6
          npm run test:visual
